// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'user_info.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

UserInfo _$UserInfoFromJson(Map<String, dynamic> json) => UserInfo(
      uid: (json['uid'] as num?)?.toInt(),
      username: json['username'] as String?,
      follow: (json['follow'] as num?)?.toInt(),
      fans: (json['fans'] as num?)?.toInt(),
      // admintype: (json['admintype'] as num?)?.toInt(),
      // groupid: (json['groupid'] as num?)?.toInt(),
      // usergroupid: (json['usergroupid'] as num?)?.toInt(),
      // level: (json['level'] as num?)?.toInt(),
      // experience: (json['experience'] as num?)?.toInt(),
      // status: (json['status'] as num?)?.toInt(),
      // blockStatus: (json['block_status'] as num?)?.toInt(),
      // usernamestatus: (json['usernamestatus'] as num?)?.toInt(),
      // avatarstatus: (json['avatarstatus'] as num?)?.toInt(),
      // avatarCoverStatus: (json['avatar_cover_status'] as num?)?.toInt(),
      // regdate: (json['regdate'] as num?)?.toInt(),
      // logintime: (json['logintime'] as num?)?.toInt(),
      // verifyTitle: json['verify_title'] as String?,
      // verifyStatus: (json['verify_status'] as num?)?.toInt(),
      // userType: (json['user_type'] as num?)?.toInt(),
      // verifyShowType: (json['verify_show_type'] as num?)?.toInt(),
      // avatarPluginStatus: (json['avatar_plugin_status'] as num?)?.toInt(),
      // fetchType: json['fetchType'] as String?,
      // entityType: json['entityType'] as String?,
      // entityId: (json['entityId'] as num?)?.toInt(),
      // displayUsername: json['displayUsername'] as String?,
      // url: json['url'] as String?,
      userAvatar: json['userAvatar'] as String?,
      // userSmallAvatar: json['userSmallAvatar'] as String?,
      // userBigAvatar: json['userBigAvatar'] as String?,
      // cover: json['cover'] as String?,
      // verifyIcon: json['verify_icon'] as String?,
      // verifyLabel: json['verify_label'] as String?,
      // isDeveloper: (json['isDeveloper'] as num?)?.toInt(),
      // nextLevelExperience: (json['next_level_experience'] as num?)?.toInt(),
      // nextLevelPercentage: json['next_level_percentage'] as String?,
      // levelTodayMessage: json['level_today_message'] as String?,
      // levelDetailUrl: json['level_detail_url'] as String?,
      // avatarPluginUrl: json['avatar_plugin_url'] as String?,
      // feedPluginUrl: json['feed_plugin_url'] as String?,
      // feedPluginOpenUrl: json['feed_plugin_open_url'] as String?,
      // feedReplyPlugin: json['feed_reply_plugin'] as String?,
      // feedReplyPluginOpenUrl: json['feed_reply_plugin_open_url'] as String?,
    );

Map<String, dynamic> _$UserInfoToJson(UserInfo instance) => <String, dynamic>{
      'uid': instance.uid,
      'username': instance.username,
      'follow': instance.follow,
      'fans': instance.fans,
      // 'admintype': instance.admintype,
      // 'groupid': instance.groupid,
      // 'usergroupid': instance.usergroupid,
      // 'level': instance.level,
      // 'experience': instance.experience,
      // 'status': instance.status,
      // 'block_status': instance.blockStatus,
      // 'usernamestatus': instance.usernamestatus,
      // 'avatarstatus': instance.avatarstatus,
      // 'avatar_cover_status': instance.avatarCoverStatus,
      // 'regdate': instance.regdate,
      // 'logintime': instance.logintime,
      // 'verify_title': instance.verifyTitle,
      // 'verify_status': instance.verifyStatus,
      // 'user_type': instance.userType,
      // 'verify_show_type': instance.verifyShowType,
      // 'avatar_plugin_status': instance.avatarPluginStatus,
      // 'fetchType': instance.fetchType,
      // 'entityType': instance.entityType,
      // 'entityId': instance.entityId,
      // 'displayUsername': instance.displayUsername,
      // 'url': instance.url,
      'userAvatar': instance.userAvatar,
      // 'userSmallAvatar': instance.userSmallAvatar,
      // 'userBigAvatar': instance.userBigAvatar,
      // 'cover': instance.cover,
      // 'verify_icon': instance.verifyIcon,
      // 'verify_label': instance.verifyLabel,
      // 'isDeveloper': instance.isDeveloper,
      // 'next_level_experience': instance.nextLevelExperience,
      // 'next_level_percentage': instance.nextLevelPercentage,
      // 'level_today_message': instance.levelTodayMessage,
      // 'level_detail_url': instance.levelDetailUrl,
      // 'avatar_plugin_url': instance.avatarPluginUrl,
      // 'feed_plugin_url': instance.feedPluginUrl,
      // 'feed_plugin_open_url': instance.feedPluginOpenUrl,
      // 'feed_reply_plugin': instance.feedReplyPlugin,
      // 'feed_reply_plugin_open_url': instance.feedReplyPluginOpenUrl,
    };
